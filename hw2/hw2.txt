Author: Dylan Wright
Homework 2

4.1) For this proof, dn will be a series of all 9s.
Base case: N = 1, d[i] * 10^0 = 9. The upper bound for the radix digit will be (1 - 1) or 10^0 so the digit will never reach 10.
For N = k, the upper bound on the Riemann sum is k - 1 so the largest digit which can be represented is di * 10^(k - 1). Additionally, for N = k + 1, the upper bound for the largest digit will become k so the largest digit will be di * 10^k). If every digit is 9, then the largest digit that can be represented will always be one less than r^k.

4.2) If you have a carry number, that number will represent whatever is in the tens place of the resulting addition of the previous two numbers. In radix addition, you are always adding two single digit numbers at a time ie the largest both numbers can be will be 9. Therefore, the resulting number will always be between 0 and 18 and you will always have carry numbers which are 0 or 1. 

4.3) The largest two's complemeent number of any digit size that you can represent will take the form of the left most digit being 0 and every other digit being 1 ie 0111 for n=4. The smallest (most negative) two's complement number will take the form of the left most digit being 1 and everything else being 0 ie 1000 for n=4. For the largest number, because you cannot have the largest digit be 1, the largest number you can represent is (2^n) - 1. For the smallest number, the most negative number that can be represented has a 1 in the largest digit position so the smallest number that can be represented is negative 2^n. 

4.5) If the number is positive and the left most bit is 0, it is obvious why bit extension is value preserving: 0 will be added to the number. On the other hand, if the number is negative and the left most bit is 1: in binary, the digit at i + 1 is double the digit at i. Therefore, if you add a negative i + 1 with a positive i, the value will be identical to the original value of the negative i. 
Example: 1000 = -1 * 2^3. Sign extension returns 11000 = -1 * 2^4 + 1 * 2^3. Converting the negative bit to positive and adding it to the next negative bit will return the same number. Because it holds that negative i is identical to (negative i + 1 - positive i), the number as a whole will be unaltered.

6) Method is to continuously divide by two and return the (reversed) remainder.
213:
q 213 106 53 26 13 6 3 1
r   1  0   1  0  1 0 1 1 binary representation is 1101 0101

1627:
q 1627 813 406 203 101 50 25 12 6 3 1
r    1   1   0   1   1  0  1  0 0 1 1 binary is 0110 0101 1011

31773:
q 31773 15886 7943 3971 1985 992 496 248 124 62 31 15 7 3 1
r     1     0    1    1    1   0   0   0   0  0  1  1 1 1 1 binary: 0111 1100 0001 1101

103:
q 103 51 25 12 6 3 1
r   1  1  1  0 0 1 1 binary: 0110 0111

7)
222 - 47:
222 bin: 1101 1110
47  bin: 0010 1111 converted: 1101 0001 
equation: 1101 1110
        + 1101 0001
          1010 1111

1011 - 143:
1011 bin: 0011 1111 0011
143  bin: 0000 1000 1111 converted: 1111 0111 0001
equation: 0011 1111 0011
        + 1111 0111 0001
          0011 0110 0100

171 - 88:
171 bin:  1010 1011
 88 bin:  0101 1000 converted: 1010 1000
equation: 1010 1011
        + 1010 1000
          0101 0011

2720 - 127:
2720 bin: 1010 1010 0000
 127 bin: 0000 0111 1111 converted: 1111 1000 0001
equation: 1010 1010 0000
        + 1111 1000 0001
          1010 0010 0001

8)
